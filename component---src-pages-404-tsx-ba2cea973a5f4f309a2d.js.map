{"version":3,"sources":["webpack://@viet-aus-it/viet-aus-it.github.io/./src/utils/getSocialLink.ts","webpack://@viet-aus-it/viet-aus-it.github.io/./src/components/Bio.tsx","webpack://@viet-aus-it/viet-aus-it.github.io/./src/components/PostView.tsx","webpack://@viet-aus-it/viet-aus-it.github.io/./src/pages/404.tsx"],"names":["getSocialLink","key","url","includes","useBioQuery","author","social","avatar","style","display","marginBottom","rhythm","G","image","width","height","alt","name","marginRight","minWidth","borderRadius","summary","href","github","discord","facebookGroup","facebookPage","node","title","description","publishedDate","formatPublishedDate","publishDate","Link","boxShadow","to","slug","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","location","useSEOQuery"],"mappings":"ySAAe,SAASA,EAAcC,EAAaC,GACjD,GAAIA,EAAIC,SAAS,YAAcD,EAAIC,SAAS,YAC1C,OAAOD,EAGT,OAAQD,GACN,IAAK,SACH,4BAA6BC,EAE/B,IAAK,UACH,4BAA6BA,EAE/B,IAAK,eACH,8BAA+BA,EAEjC,IAAK,gBACH,oCAAqCA,EAEvC,QACE,OAAOA,G,wBC0Bb,MAxCA,WAAe,OACsBE,UAA3BC,EADK,EACLA,OAAQC,EADH,EACGA,OAAQC,EADX,EACWA,OAExB,OACE,iBACEC,MAAO,CACLC,QAAS,OACTC,cAAcC,QAAO,MAHzB,WAME,SAAC,EAAAC,EAAD,CACEC,MAAK,iBACAN,EADA,CAEHO,MAAO,GACPC,OAAQ,KAEVC,IAAKX,EAAOY,KACZT,MAAO,CACLU,aAAaP,QAAO,IACpBD,aAAc,EACdS,SAAU,GACVC,aAAc,WAGlB,uCAEE,4BAASf,EAAOY,OAFlB,MAGSZ,EAAOgB,QAHhB,mBAIE,cAAGC,KAAMtB,EAAc,SAAUM,EAAOiB,QAAxC,oBAJF,MAME,cAAGD,KAAMtB,EAAc,UAAWM,EAAOkB,SAAzC,qBANF,mBAQE,cAAGF,KAAMtB,EAAc,gBAAiBM,EAAOmB,eAA/C,mBARF,SAUE,cAAGH,KAAMtB,EAAc,eAAgBM,EAAOoB,cAA9C,kBAVF,W,wDCQN,MA3BA,YAA0C,IAAtBC,EAAsB,EAAtBA,KACVC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACTC,GAAgBC,OAAoBJ,EAAKK,aAE/C,OACE,gCACE,+BACE,eACExB,MAAO,CACLE,cAAcC,QAAO,EAAI,IAF7B,UAKE,SAAC,EAAAsB,KAAD,CAAMzB,MAAO,CAAE0B,UAAW,QAAUC,GAAIR,EAAKS,KAA7C,SACGR,OAGL,2BAAQE,QAEV,oBACEO,wBAAyB,CACvBC,OAAQT,EAAYU,oBAAoBC,MAAQ,iB,qFCf1D,UAZA,YAAmD,IAA3BC,EAA2B,EAA3BA,SACdb,GAAUc,UAAVd,MAER,OACE,UAAC,KAAD,CAAQa,SAAUA,EAAUb,MAAOA,EAAnC,WACE,SAAC,KAAD,CAAKA,MAAUA,EAAL,uBACV,uCACA","file":"component---src-pages-404-tsx-ba2cea973a5f4f309a2d.js","sourcesContent":["export default function getSocialLink(key: string, url: string) {\n  if (url.includes('http://') || url.includes('https://')) {\n    return url;\n  }\n\n  switch (key) {\n    case 'github':\n      return `https://github.com/${url}`;\n\n    case 'discord':\n      return `https://discord.gg/${url}`;\n\n    case 'facebookPage':\n      return `https://facebook.com/${url}`;\n\n    case 'facebookGroup':\n      return `https://facebook.com/group/${url}`;\n\n    default:\n      return url;\n  }\n}\n","import { GatsbyImage } from 'gatsby-plugin-image';\nimport { rhythm } from '../utils/typography';\nimport getSocialLink from '../utils/getSocialLink';\nimport { useBioQuery } from '../hooks';\n\nfunction Bio() {\n  const { author, social, avatar } = useBioQuery();\n\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <GatsbyImage\n        image={{\n          ...avatar,\n          width: 50,\n          height: 50,\n        }}\n        alt={author.name}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n      />\n      <p>\n        {`A blog by `}\n        <strong>{author.name}</strong>\n        {` - ${author.summary}. Follow us on `}\n        <a href={getSocialLink('github', social.github)}>GitHub</a>\n        {`, `}\n        <a href={getSocialLink('discord', social.discord)}>Discord</a>\n        {`, our Facebook `}\n        <a href={getSocialLink('facebookGroup', social.facebookGroup)}>group</a>\n        {` and `}\n        <a href={getSocialLink('facebookPage', social.facebookPage)}>page</a>.\n      </p>\n    </div>\n  );\n}\n\nexport default Bio;\n","/* eslint-disable react/no-danger */\n\nimport { Link } from 'gatsby';\nimport { rhythm } from '../utils/typography';\nimport formatPublishedDate from '../utils/formatPublishedDate';\n\ninterface PostViewProp {\n  node: ContentfulPost;\n}\n\nfunction PostView({ node }: PostViewProp) {\n  const { title, description } = node;\n  const publishedDate = formatPublishedDate(node.publishDate);\n\n  return (\n    <article>\n      <header>\n        <h3\n          style={{\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          <Link style={{ boxShadow: `none` }} to={node.slug}>\n            {title}\n          </Link>\n        </h3>\n        <small>{publishedDate}</small>\n      </header>\n      <section\n        dangerouslySetInnerHTML={{\n          __html: description.childMarkdownRemark.html || '<p></p>',\n        }}\n      />\n    </article>\n  );\n}\n\nexport default PostView;\n","import { useSEOQuery } from '../hooks';\nimport { Layout, SEO } from '../components';\n\nfunction NotFoundPage({ location }: PagePropsType) {\n  const { title } = useSEOQuery();\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={`${title} - 404: Not Found`} />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  );\n}\n\nexport default NotFoundPage;\n"],"sourceRoot":""}