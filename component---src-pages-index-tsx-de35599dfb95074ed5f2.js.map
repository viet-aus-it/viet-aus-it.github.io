{"version":3,"sources":["webpack://@viet-aus-it/viet-aus-it.github.io/./src/utils/getSocialLink.ts","webpack://@viet-aus-it/viet-aus-it.github.io/./src/components/Bio.tsx","webpack://@viet-aus-it/viet-aus-it.github.io/./src/components/PostView.tsx","webpack://@viet-aus-it/viet-aus-it.github.io/./src/pages/index.tsx","webpack://@viet-aus-it/viet-aus-it.github.io/./src/utils/getUniquePostBySlug.ts","webpack://@viet-aus-it/viet-aus-it.github.io/./node_modules/lodash/_arrayIncludes.js","webpack://@viet-aus-it/viet-aus-it.github.io/./node_modules/lodash/_arrayIncludesWith.js","webpack://@viet-aus-it/viet-aus-it.github.io/./node_modules/lodash/_baseFindIndex.js","webpack://@viet-aus-it/viet-aus-it.github.io/./node_modules/lodash/_baseIndexOf.js","webpack://@viet-aus-it/viet-aus-it.github.io/./node_modules/lodash/_baseIsNaN.js","webpack://@viet-aus-it/viet-aus-it.github.io/./node_modules/lodash/_baseUniq.js","webpack://@viet-aus-it/viet-aus-it.github.io/./node_modules/lodash/_createSet.js","webpack://@viet-aus-it/viet-aus-it.github.io/./node_modules/lodash/_strictIndexOf.js","webpack://@viet-aus-it/viet-aus-it.github.io/./node_modules/lodash/noop.js","webpack://@viet-aus-it/viet-aus-it.github.io/./node_modules/lodash/uniqBy.js"],"names":["getSocialLink","key","url","includes","useBioQuery","author","social","avatar","style","display","marginBottom","rhythm","G","image","width","height","alt","name","marginRight","minWidth","borderRadius","summary","href","github","discord","facebookGroup","facebookPage","node","title","description","publishedDate","formatPublishedDate","publishDate","Link","boxShadow","to","slug","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","location","useSEOQuery","posts","contentfulPosts","getUniquePostsBySlug","useBlogPosts","map","baseIndexOf","module","exports","array","value","length","comparator","index","predicate","fromIndex","fromRight","baseFindIndex","baseIsNaN","strictIndexOf","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","iteratee","isCommon","result","seen","set","outer","computed","seenIndex","push","Set","noop","values","baseIteratee","baseUniq"],"mappings":"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","file":"component---src-pages-index-tsx-de35599dfb95074ed5f2.js","sourcesContent":["export default function getSocialLink(key: string, url: string) {\n  if (url.includes('http://') || url.includes('https://')) {\n    return url;\n  }\n\n  switch (key) {\n    case 'github':\n      return `https://github.com/${url}`;\n\n    case 'discord':\n      return `https://discord.gg/${url}`;\n\n    case 'facebookPage':\n      return `https://facebook.com/${url}`;\n\n    case 'facebookGroup':\n      return `https://facebook.com/group/${url}`;\n\n    default:\n      return url;\n  }\n}\n","import { GatsbyImage } from 'gatsby-plugin-image';\nimport { rhythm } from '../utils/typography';\nimport getSocialLink from '../utils/getSocialLink';\nimport { useBioQuery } from '../hooks';\n\nfunction Bio() {\n  const { author, social, avatar } = useBioQuery();\n\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <GatsbyImage\n        image={{\n          ...avatar,\n          width: 50,\n          height: 50,\n        }}\n        alt={author.name}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n      />\n      <p>\n        {`A blog by `}\n        <strong>{author.name}</strong>\n        {` - ${author.summary}. Follow us on `}\n        <a href={getSocialLink('github', social.github)}>GitHub</a>\n        {`, `}\n        <a href={getSocialLink('discord', social.discord)}>Discord</a>\n        {`, our Facebook `}\n        <a href={getSocialLink('facebookGroup', social.facebookGroup)}>group</a>\n        {` and `}\n        <a href={getSocialLink('facebookPage', social.facebookPage)}>page</a>.\n      </p>\n    </div>\n  );\n}\n\nexport default Bio;\n","/* eslint-disable react/no-danger */\n\nimport { Link } from 'gatsby';\nimport { rhythm } from '../utils/typography';\nimport formatPublishedDate from '../utils/formatPublishedDate';\n\ninterface PostViewProp {\n  node: ContentfulPost;\n}\n\nfunction PostView({ node }: PostViewProp) {\n  const { title, description } = node;\n  const publishedDate = formatPublishedDate(node.publishDate);\n\n  return (\n    <article>\n      <header>\n        <h3\n          style={{\n            marginBottom: rhythm(1 / 4),\n          }}\n        >\n          <Link style={{ boxShadow: `none` }} to={node.slug}>\n            {title}\n          </Link>\n        </h3>\n        <small>{publishedDate}</small>\n      </header>\n      <section\n        dangerouslySetInnerHTML={{\n          __html: description.childMarkdownRemark.html || '<p></p>',\n        }}\n      />\n    </article>\n  );\n}\n\nexport default PostView;\n","import { useSEOQuery, useBlogPosts } from '../hooks';\nimport { Bio, Layout, SEO, PostView } from '../components';\nimport getUniquePostsBySlug from '../utils/getUniquePostBySlug';\n\nfunction BlogIndex({ location }: PagePropsType) {\n  const { title } = useSEOQuery();\n  const contentfulPosts = useBlogPosts();\n  const posts = getUniquePostsBySlug(contentfulPosts);\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      {posts.map((node) => node && <PostView node={node} key={node.slug} />)}\n    </Layout>\n  );\n}\n\nexport default BlogIndex;\n","import { uniqBy } from 'lodash';\n\nexport default function getUniquePostsBySlug(\n  contentfulPosts: ContentfulPost[]\n) {\n  return uniqBy(contentfulPosts, (node) => node.slug);\n}\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"sourceRoot":""}